import asyncpg
from telethon import TelegramClient
import asyncio
from datetime import datetime
from prettytable import PrettyTable

api_id = 26571368
api_hash = "16e182266e553e43ae816f43964dcc88"
api_token = "7928015612:AAElPJxfCn1TINzAVfQngR4b7wqDIlq5Gt4"


async def get_connection():
    """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
    print(f"\n[{datetime.now().strftime('%H:%M:%S')}] üîÑ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL...")
    try:
        conn = await asyncpg.connect(
            user='postgres',
            password='7828',
            database='itmmorpg',
            host='Localhost'
        )
        print(f"[{datetime.now().strftime('%H:%M:%S')}] ‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL!")
        return conn
    except Exception as e:
        print(f"[{datetime.now().strftime('%H:%M:%S')}] ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        raise


async def test_db_connection():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î —Å –ø–æ–Ω—è—Ç–Ω—ã–º –≤—ã–≤–æ–¥–æ–º"""
    conn = await get_connection()
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏ –∫—Ä–∞—Å–∏–≤–æ –≤—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ë–î
        db_version = await conn.fetchval("SELECT version()")
        test_result = await conn.fetchval("SELECT 1")

        print("\nüìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
        print(f"‚îú‚îÄ –í–µ—Ä—Å–∏—è PostgreSQL: {db_version.split(',')[0]}")
        print(f"‚îî‚îÄ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å: {test_result} (–æ–∂–∏–¥–∞–ª–æ—Å—å: 1)")

    finally:
        await conn.close()
        print(f"\n[{datetime.now().strftime('%H:%M:%S')}] üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î –∑–∞–∫—Ä—ã—Ç–æ")


async def run_bot():
    """–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
    print(f"\n[{datetime.now().strftime('%H:%M:%S')}] ü§ñ –ó–∞–ø—É—Å–∫–∞–µ–º Telegram –±–æ—Ç–∞...")
    client = TelegramClient('bot2026', api_id, api_hash)

    try:
        await client.start(bot_token=api_token)
        me = await client.get_me()
        print(f"[{datetime.now().strftime('%H:%M:%S')}] ‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
        print(f"    ‚îú‚îÄ ID: {me.id}")
        print(f"    ‚îú‚îÄ –ò–º—è: {me.first_name}")
        print(f"    ‚îî‚îÄ Username: @{me.username}")

        print("\nüîÑ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –æ–∂–∏–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π...")

        conn = await get_connection()

        db_name = await conn.fetchval("SELECT current_database()")
        print(f"–ë–æ—Ç –ø–æ–¥–∫–ª—é—á—ë–Ω –∫ –ë–î: {db_name}")

        tables = await conn.fetch("SELECT table_name FROM information_schema.tables WHERE table_schema = 'public'")
        print("–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã:", [t['table_name'] for t in tables])

        rows = await conn.fetch(f"SELECT * FROM server")
        print(rows)
        await client.run_until_disconnected()
    finally:
        print(123)


async def main():
    """–ì–ª–∞–≤–Ω–∞—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print(f"[{datetime.now().strftime('%H:%M:%S')}] üöÄ –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã")
    await test_db_connection()
    await run_bot()


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print(f"\n[{datetime.now().strftime('%H:%M:%S')}] üõë –ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n[{datetime.now().strftime('%H:%M:%S')}] üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")